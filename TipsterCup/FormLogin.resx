<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UpMAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>27</value>
  </metadata>
</root>